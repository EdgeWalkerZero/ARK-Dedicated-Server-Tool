<UserControl x:Class="ARK_Server_Manager.ServerSettingsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:globcntrls="clr-namespace:WPFSharp.Globalizer.Controls;assembly=WPFSharp.Globalizer"             
             xmlns:Globalizer="clr-namespace:WPFSharp.Globalizer;assembly=WPFSharp.Globalizer"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:local="clr-namespace:ARK_Server_Manager"
             xmlns:lib="clr-namespace:ARK_Server_Manager.Lib"
             xmlns:vm="clr-namespace:ARK_Server_Manager.Lib.ViewModel"
             mc:Ignorable="d"
             d:DesignWidth="800"
             x:Name="SettingsControl">
    <UserControl.Resources>
        <vm:DifficultyOffsetValueConverter x:Key="DifficultyOffsetValueConverter" />
        <vm:LevelIndexToDisplayLevelConverter x:Key="LevelIndexToDisplayLevelConverter" />
        <vm:EngramClassNameToDisplayNameConverter x:Key="EngramClassNameToDisplayNameConverter" />
        <vm:DinoNameValueConverter x:Key="DinoNameValueConverter" />
        <vm:ResourceNameValueConverter x:Key="ResourceNameValueConverter" />
        <vm:DinoSettingsList x:Key="BaseDinoSettings"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Style TargetType="local:AnnotatedTextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="local:AnnotatedTextBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{TemplateBinding Label}"/>
                            <TextBox Grid.Column="1" Text="{TemplateBinding Text}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000"/>
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000"/>
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FF333333"/>
        <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333"/>
        <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="-90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="180"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" SnapsToDevicePixels="true" Padding="1" Margin="0,0,0,8" BorderBrush="Black" Background="#FFCFC8BA">
                            <DockPanel Background="#FFEAE7E0">
                                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="4,4,1,4" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,0,0,0"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="BeigeGradient" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFECE1D4" Offset="1"/>
            <GradientStop Color="#FFEAE8E6"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="BeigeLabel" Color="#FFE6DFD8"/>
        <SolidColorBrush x:Key="BeigeBorder" Color="#FFD8CCBC"/>
        <ContentControl x:Key="StopButtonContent">
            <StackPanel Orientation="Horizontal" Height="27">
                <Image Source="Art/Stop.png" Width="16" Margin="5,0,5,0" VerticalAlignment="Center"/>
                <Label Content="Stop" VerticalAlignment="Center"/>
            </StackPanel>
        </ContentControl>
        <ContentControl x:Key="StartButtonContent">
            <StackPanel Orientation="Horizontal" Height="27">
                <Image Source="Art/Start_6556.png" Width="16" Margin="5,0,5,0" VerticalAlignment="Center"/>
                <Label Content="Start" VerticalAlignment="Center"/>
            </StackPanel>
        </ContentControl>

        <ContentControl x:Key="UpgradeButtonContent">
            <StackPanel Orientation="Horizontal" Height="27">
                <Image Source="Art/Upgrade.png" Width="16" Margin="5,0,5,0" VerticalAlignment="Center"/>
                <Label Content="Upgrade" VerticalAlignment="Center"/>
            </StackPanel>
        </ContentControl>
        <ContentControl x:Key="InstallButtonContent">
            <StackPanel Orientation="Horizontal" Height="27">
                <Image Source="Art/Upgrade.png" Width="16" Margin="5,0,5,0" VerticalAlignment="Center"/>
                <Label Content="Upgrade" VerticalAlignment="Center"/>
            </StackPanel>
        </ContentControl>
        <ContentControl x:Key="CancelInstallButtonContent">
            <StackPanel Orientation="Horizontal" Height="27">
                <Image Source="Art/Stop.png" Width="16" Margin="5,0,5,0" VerticalAlignment="Center"/>
                <Label Content="Cancel" VerticalAlignment="Center"/>
            </StackPanel>
        </ContentControl>
        <ContentControl x:Key="LocationButtonContent">
            <StackPanel Orientation="Horizontal">
                <Image Source="Art/Open_6529.png" Width="16" Margin="5,0,5,0" />
                <Label Content="Set Location..." />
            </StackPanel>
        </ContentControl>
        <ContentControl x:Key="AddWhitelistButtonContent">
            <StackPanel Orientation="Horizontal">
                <Image Source="Art/Back.png" Width="16" Margin="5,0,5,0" />
                <Label Content="Add" />
            </StackPanel>
        </ContentControl>
        <ContentControl x:Key="RemoveWhitelistButtonContent">
            <StackPanel Orientation="Horizontal">
                <Image Source="Art/Delete.png" Width="16" Margin="5,0,5,0" />
                <Label Content="Remove" />
            </StackPanel>
        </ContentControl>
        <ContentControl x:Key="ValidateButtonContent">
            <StackPanel Orientation="Horizontal">
                <Image Source="Art/Check.png" Width="16" Margin="5,0,5,0" />
                <Label Content="Validate" />
            </StackPanel>
        </ContentControl>
        <ContentControl x:Key="ShowCmdButtonContent">
            <StackPanel Orientation="Horizontal">
                <Image Source="Art/Command.png" Width="16" Margin="5,0,5,0" />
                <Label Content="Show Command..." />
            </StackPanel>
        </ContentControl>
        <ContentControl x:Key="OpenRCONButtonContent">
            <StackPanel Orientation="Horizontal">
                <Image Source="Art/Command.png" Width="16" Margin="5,0,5,0"/>
                <Label Content="Console"/>
            </StackPanel>
        </ContentControl>

        <DataTemplate x:Key="PlayerLevelItemTemplate">
            <Border BorderBrush="Black" BorderThickness="1" Background="Beige">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Button Grid.Column="0" Grid.Row="0" Click="RemovePlayerLevel_Click" Margin="2" >
                        <Image Source="Art/Delete.png" Width="16" Height="16" Margin="5,0,5,0" />
                    </Button>
                    <Label Grid.Column="1" Grid.Row="0" Content="{Binding LevelIndex, Converter={StaticResource LevelIndexToDisplayLevelConverter}, StringFormat=Level: {0}}" FontSize="15" FontWeight="Bold" VerticalAlignment="Center"/>
                    <Label Grid.Column="2" Grid.Row="0" Content="XP Required:" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="3" Grid.Row="0" Text="{Binding XPRequired}" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                    <Label Grid.Column="4" Grid.Row="0" Content="Engram Points:" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="5" Grid.Row="0" Text="{Binding EngramPoints}" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="DinoLevelItemTemplate">
            <Border BorderBrush="Black" BorderThickness="1" Background="Beige">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Button Grid.Column="0" Grid.Row="0" Click="RemovePlayerLevel_Click" Margin="2" >
                        <Image Source="Art/Delete.png" Width="16" Height="16" Margin="5,0,5,0" />
                    </Button>
                    <Label Grid.Column="1" Grid.Row="0" Content="{Binding LevelIndex, Converter={StaticResource LevelIndexToDisplayLevelConverter}, StringFormat=Level: {0}}" FontSize="15" FontWeight="Bold" VerticalAlignment="Center"/>
                    <Label Grid.Column="2" Grid.Row="0" Content="XP Required:" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="3" Grid.Row="0" Text="{Binding XPRequired}" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
            </Border>
        </DataTemplate>
    </UserControl.Resources>
    <Grid Background="{DynamicResource BeigeGradient}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
        </Grid.ColumnDefinitions>
        <Border Margin="10,5" Grid.Row="0" Grid.ColumnSpan="2" BorderBrush="#FF10274F" BorderThickness="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid DataContext="{Binding Profile}" Grid.Row="0" Height="38">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" FontSize="15" Content="Profile:" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Left" VerticalContentAlignment="Center"/>
                    <TextBox Margin="5" Grid.Column="1" Text="{Binding ProfileName}" VerticalContentAlignment="Center"
    					ToolTip="The name for the server profile.  This is not the public name users will see in Ark.  For that, set the 'Server Name' field."/>
                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                        <Button Margin="5" Click="Load_Click" ToolTip="Load an existing profile, or import one directly from an existing server.">
                            <Image Source="Art/Open_6529.png" Height="16" Margin="5,0,5,0" />
                        </Button>
                        <Button Margin="5" Click="Save_Click" ToolTip="Save the current profile and write the .INI files for the server.">
                            <Image Source="Art/Save_6530.png" Height="16" Margin="5,0,5,0"/>
                        </Button>
                        <Button Margin="5" IsEnabled="False" Click="CopyProfile_Click" ToolTip="Copy this profile to a new profile.">
                            <Image Source="Art/Copy_6524.png" Height="16"  Margin="5,0,5,0" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Grid.Row="1" Margin="0,0,0,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid DataContext="{Binding Runtime}" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Background="{DynamicResource BeigeLabel}" Margin="2" BorderBrush="{DynamicResource BeigeBorder}" 
						Style="{DynamicResource BorderLabel}">
                            <StackPanel Orientation="Horizontal">
                                <Label FontSize="15" Content="Installed Version:" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                <Label FontSize="15" Content="{Binding Version}" HorizontalAlignment="Left"  VerticalAlignment="Center" />
                            </StackPanel>
                        </Border>
                        <Border Grid.Column="1" Height="29.95" Background="{DynamicResource BeigeLabel}" Margin="2" BorderBrush="{DynamicResource BeigeBorder}" Style="{DynamicResource BorderLabel}">
                            <StackPanel Orientation="Horizontal">
                                <Label FontSize="15" Content="Latest Available Version:" HorizontalAlignment="Left"/>
                                <Label FontSize="15" Content="{Binding ElementName=SettingsControl, Path=ServerManager.AvailableVersion}" HorizontalAlignment="Left"/>

                                <Button Margin="5,0,0,0" Click="CheckForUpdates_Click" Width="22" Height="22" VerticalAlignment="Center"
                                        ToolTip="Check for new versions">
                                    <Image Source="Art/Refresh.png" Width="16" Height="16" />
                                </Button>
                            </StackPanel>
                        </Border>
                    </Grid>
                    <Button DataContext="{Binding Runtime}"  Grid.Column="2" Grid.Row="0" Margin="5" Click="Upgrade_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Initializing}">
                                        <Setter Property="Content" Value="{StaticResource UpgradeButtonContent}"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Running}">
                                        <Setter Property="Content" Value="{StaticResource UpgradeButtonContent}"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Stopping}">
                                        <Setter Property="Content" Value="{StaticResource UpgradeButtonContent}"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Stopped}">
                                        <Setter Property="Content" Value="{StaticResource UpgradeButtonContent}"/>
                                        <Setter Property="ToolTip" Value="Upgrade to the latest version." />
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Unknown}">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Updating}">
                                        <Setter Property="Content" Value="{StaticResource CancelInstallButtonContent}"/>
                                        <Setter Property="ToolTip" Value="Cancel the server upgrade." />
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Uninstalled}">
                                        <Setter Property="Content" Value="{StaticResource InstallButtonContent}"/>
                                        <Setter Property="ToolTip" Value="Install the server." />
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                    </Button>

                    <Border HorizontalAlignment="Stretch" DataContext="{Binding Profile}" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Background="{DynamicResource BeigeLabel}" Margin="2" Style="{DynamicResource BorderLabel}">
                        <DockPanel HorizontalAlignment="Stretch" LastChildFill="true">
                            <Label DockPanel.Dock="Left" Content="Installation Location:" FontSize="15" VerticalAlignment="Center"/>
                            <TextBox DockPanel.Dock="Left" Text="{Binding InstallDirectory}" IsReadOnly="True" IsReadOnlyCaretVisible="True" FontSize="15" VerticalAlignment="Center" Margin="5"/>
                        </DockPanel>
                    </Border>

                    <Button DataContext="{Binding Runtime}"  Margin="5" Grid.Column="2" Grid.Row="1" Click="SelectInstallDirectory_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Initializing}">
                                        <Setter Property="Content" Value="{StaticResource LocationButtonContent}"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Running}">
                                        <Setter Property="Content" Value="{StaticResource LocationButtonContent}"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Stopping}">
                                        <Setter Property="Content" Value="{StaticResource LocationButtonContent}"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Stopped}">
                                        <Setter Property="Content" Value="{StaticResource LocationButtonContent}"/>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Unknown}">
                                        <Setter Property="Content" Value="{StaticResource LocationButtonContent}"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Updating}">
                                        <Setter Property="Content" Value="{StaticResource LocationButtonContent}"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Uninstalled}">
                                        <Setter Property="Content" Value="{StaticResource LocationButtonContent}"/>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Grid DataContext="{Binding Runtime}" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" VerticalAlignment="Center" Height="38">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.Column="0" Background="{DynamicResource BeigeLabel}" Margin="2" Style="{DynamicResource BorderLabel}">
                            <StackPanel Orientation="Horizontal">
                                <Label FontSize="15" Content="Server Status:"/>
                                <Label FontSize="15" Content="{Binding Status}" ToolTip="This is the status of the server on your local network."/>
                            </StackPanel>
                        </Border>
                        <Border Grid.Column="1" Background="{DynamicResource BeigeLabel}" Margin="2" Style="{DynamicResource BorderLabel}">
                            <StackPanel Orientation="Horizontal">
                                <Label FontSize="15" Content="Steam Status:"/>
                                <Label FontSize="15" ToolTip="This is the status of the server on Steam.">
                                    <Label.Style>
                                        <Style TargetType="{x:Type Label}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Steam}" Value="{x:Static lib:ServerRuntime+SteamStatus.Unknown}">
                                                    <Setter Property="Content" Value="Unknown"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Steam}" Value="{x:Static lib:ServerRuntime+SteamStatus.NeedPublicIP}">
                                                    <Setter Property="Content" Value="Set Public IP"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Steam}" Value="{x:Static lib:ServerRuntime+SteamStatus.Unavailable}">
                                                    <Setter Property="Content" Value="Unavailable"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Steam}" Value="{x:Static lib:ServerRuntime+SteamStatus.WaitingForPublication}">
                                                    <Setter Property="Content" Value="Waiting for publication"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Steam}" Value="{x:Static lib:ServerRuntime+SteamStatus.Available}">
                                                    <Setter Property="Content" Value="Available"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </StackPanel>
                        </Border>
                        <Border Grid.Column="2" Background="{DynamicResource BeigeLabel}" Margin="2" Style="{DynamicResource BorderLabel}">
                            <StackPanel Orientation="Horizontal">
                                <Label FontSize="15" Content="Players:"/>
                                <Label FontSize="15" Content="{Binding Players}"/>
                                <Label FontSize="15" Content="/" Width="20"/>
                                <Label FontSize="15" Content="{Binding MaxPlayers}"/>
                            </StackPanel>
                        </Border>
                    </Grid>
                    <StackPanel DataContext="{Binding Runtime}" Grid.Column="2" Grid.Row="2" Orientation="Horizontal" Height="39">
                        <Button Margin="5" Click="Start_Click">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Initializing}">
                                            <Setter Property="Content" Value="{StaticResource StopButtonContent}"/>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Running}">
                                            <Setter Property="Content" Value="{StaticResource StopButtonContent}"/>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Stopping}">
                                            <Setter Property="Content" Value="{StaticResource StopButtonContent}"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Stopped}">
                                            <Setter Property="Content" Value="{StaticResource StartButtonContent}"/>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Unknown}">
                                            <Setter Property="Content" Value="{StaticResource StartButtonContent}"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Updating}">
                                            <Setter Property="Content" Value="{StaticResource StartButtonContent}"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static lib:ServerRuntime+ServerStatus.Uninstalled}">
                                            <Setter Property="Content" Value="{StaticResource StartButtonContent}"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Margin="5" IsEnabled="{Binding ElementName=EnableRCON, Path=IsChecked}" Content="{StaticResource OpenRCONButtonContent}"  Click="OpenRCON_Click"/>
                    </StackPanel>
                </Grid>
            </Grid>
        </Border>
        <Border Grid.Row="1" BorderBrush="#FFD4C2B0" BorderThickness="2" Margin="3" Padding="0" >
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFECE1D4"/>
                    <GradientStop Color="#FFEAE8E6" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
            <ScrollViewer DataContext="{Binding Profile}" VerticalScrollBarVisibility="Auto" BorderBrush="Black">
                <StackPanel Margin="10,5,10,5" CanVerticallyScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <Expander IsExpanded="True" Style="{DynamicResource ExpanderStyle1}">
                        <Expander.Header>
                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Administration" VerticalAlignment="Center" FontWeight="Bold" FontSize="13.333"/>
                        </Expander.Header>
                        <Grid Margin="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="3*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Label Grid.Column="0" Grid.Row="0" Content="Server Name:"/>
                            <TextBox Grid.Column="1" Grid.Row="0"  Text="{Binding ServerName}" VerticalContentAlignment="Center" HorizontalContentAlignment="Stretch"
        						ToolTip="The public name of the server, as seen in Steam and Ark."/>
                            <Label Grid.Column="2" Grid.Row="0" Content="Server Password:"/>
                            <TextBox Grid.Column="3" Grid.Row="0"  Text="{Binding ServerPassword}" VerticalContentAlignment="Center" HorizontalContentAlignment="Stretch"
        						ToolTip="The password users must enter in order to access the server. If this is set, only people who know the password can access your server."/>
                            <Label Grid.Column="4" Grid.Row="0" Content="Admin Password:"/>
                            <TextBox Grid.Column="5" Grid.Row="0" Text="{Binding AdminPassword}" VerticalContentAlignment="Center" HorizontalContentAlignment="Stretch"
        						ToolTip="Ths password users must enter to execute admin/cheat commands on the server. If this is not set, anyone can use cheats."/>

                            <Label Grid.Column="0" Grid.Row="1" Content="Server Port:"/>
                            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding ServerConnectionPort}" VerticalContentAlignment="Center" HorizontalContentAlignment="Stretch"
        						ToolTip="The port users will use to connect to your server. Default is 7777. Change this and Query Port if you wish to host multiple servers on one machine."/>
                            <Label Grid.Column="2" Grid.Row="1" Content="Query Port:"/>
                            <TextBox Grid.Column="3" Grid.Row="1" Text="{Binding ServerPort}" VerticalContentAlignment="Center" HorizontalContentAlignment="Stretch"
        						ToolTip="The port Steam uses to communicate with your server. Default is 27015. Change this and Server Port if you wish to host multiple servers on one machine."/>

                            <DockPanel Grid.Column="4" Grid.Row="1">
                                <Label DockPanel.Dock="Left" Grid.Column="4" Grid.Row="1" Content="Local IP:"/>
                                <Button DockPanel.Dock="Right" Click="RefreshLocalIPs_Click" Margin="5" Width="22" ToolTip="Refresh the available local IPs">
                                    <Image Source="Art/Refresh.png" Width="16" />
                                </Button>
                            </DockPanel>

                            <ComboBox Grid.Column="5" Grid.Row="1" ItemsSource="{Binding ElementName=SettingsControl, Path=NetworkInterfaces}" SelectedValue="{Binding ServerIP}" SelectedValuePath="IPAddress"
                                          ToolTip="Sets the local (private) IP the server will listen on.  This should be your primary network card which routes to the public internet.">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                            <Label Content="{Binding IPAddress}"/>
                                            <Label Content="{Binding Description}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                            </ComboBox>
                            <!--
        					<TextBox Grid.Column="5" Grid.Row="1" Text="{Binding ServerIP}" VerticalContentAlignment="Center" HorizontalContentAlignment="Stretch"
        						ToolTip="Sets the IP address to bind the server to. Only necessary if your machine is on multiple networks. Most users do not need to use this and it should remain blank."/>
                            -->

                            <Label Grid.Column="0" Grid.Row="2" Content="Map"/>
                            <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding ServerMap}" VerticalContentAlignment="Center"/>
                            <Label Grid.Column="2" Grid.Row="2" Content="Spectator Password:"/>
                            <TextBox Grid.Column="3" Grid.Row="2" Text="{Binding SpectatorPassword}" VerticalContentAlignment="Center"/>

                            <local:AnnotatedSlider Grid.Column="4" Grid.ColumnSpan="2" Grid.Row="2" Label="Max Players:"  Value="{Binding MaxPlayers}" Minimum="1" Maximum="127" HorizontalAlignment="Stretch" VerticalAlignment="Center" HorizontalContentAlignment="Stretch" LargeChange="25" SmallChange="10" TickFrequency="10" LabelRelativeWidth="Auto" SliderRelativeWidth="15*" SuffixRelativeWidth="0" 
        						ToolTip="Sets the maximum number of players which can join this server."/>

                            
                            <CheckBox x:Name="EnableRCON" Grid.Column="0" Grid.Row="3" IsChecked="{Binding RCONEnabled}" Content="Enable Remote Console" VerticalAlignment="Center" Margin="5"/>
                            <Label Grid.Column="2" Grid.Row="3" Content="RCON Port:" VerticalAlignment="Center"/>
                            <TextBox Grid.Column="3" Grid.Row="3" IsEnabled="{Binding ElementName=EnableRCON, Path=IsChecked}" Text="{Binding RCONPort}" VerticalContentAlignment="Center" />
                            
                            <CheckBox x:Name="EnableKickIdlePlayersCheckbox" Grid.Column="0" Grid.Row="4" IsChecked="{Binding EnableKickIdlePlayers}" Content="Enable Idle Timeout" VerticalAlignment="Center" Margin="5"/>
                            <local:AnnotatedSlider Grid.Column="1" Grid.ColumnSpan="5" Grid.Row="4" Label="Idle Player Timeout:" Suffix="seconds"  Value="{Binding KickIdlePlayersPeriod}" Minimum="60" Maximum="7200" HorizontalAlignment="Stretch" VerticalAlignment="Center" HorizontalContentAlignment="Stretch" LargeChange="300" SmallChange="60" TickFrequency="300" LabelRelativeWidth="Auto" SliderRelativeWidth="15*" SuffixRelativeWidth="Auto" 
        						ToolTip="The time until idle players are kicked from the server."
                                IsEnabled="{Binding ElementName=EnableKickIdlePlayersCheckbox, Path=IsChecked}"/>

                            <local:AnnotatedSlider Grid.Column="0" Grid.ColumnSpan="6" Grid.Row="5" Label="Auto Save Period:" Suffix="minutes"  Value="{Binding AutoSavePeriodMinutes}" Minimum="1" Maximum="720" HorizontalAlignment="Stretch" VerticalAlignment="Center" HorizontalContentAlignment="Stretch" LargeChange="10" SmallChange="1" TickFrequency="10" LabelRelativeWidth="Auto" SliderRelativeWidth="15*" SuffixRelativeWidth="Auto" 
        						ToolTip="The time between server auto-saves."/>


                            <GroupBox Header="Message of the Day" Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="6" BorderBrush="#FFD4C2B0" Height="100">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBox Grid.Row="0" AcceptsReturn="True" Text="{Binding MOTD}" TextWrapping="Wrap" MaxLength="4096"
        						ToolTip="The Message of the Day displayed to users when they connect to the server." SpellCheck.IsEnabled="True" VerticalScrollBarVisibility="Auto"/>
                                    <local:AnnotatedSlider Grid.Row="1" Label="Duration:" Value="{Binding MOTDDuration}" Suffix="seconds" Minimum="1" Maximum="30" TickFrequency="5" SmallChange="1" LargeChange="5" />
                                </Grid>
                            </GroupBox>

                            <Label Grid.Column="0" Grid.Row="7" Content="Additional Args:" VerticalAlignment="Center"/>
                            <DockPanel Grid.Column="1" Grid.ColumnSpan="5" Grid.Row="7" LastChildFill="True">
                                <Button DockPanel.Dock="Right" Content="{StaticResource ShowCmdButtonContent}" Margin="5" Click="ShowCmd_Click"/>
                                <TextBox DockPanel.Dock ="Right" VerticalAlignment="Center" Height="29" HorizontalAlignment="Stretch" Text="{Binding AdditionalArgs}" VerticalContentAlignment="Center" HorizontalContentAlignment="Stretch"
        						ToolTip="Additional command-line args for the server.  If you specify this, add the args which start with ?'s first, followed by any other args.  For example: ?MaxPlayers=5?QueryPort=9999 -nosteamclient" Margin="0.667,0,-0.667,0"/>
                            </DockPanel>
                        </Grid>
                    </Expander>
                    <Expander IsExpanded="True" Style="{DynamicResource ExpanderStyle1}">
                        <Expander.Header>
                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Rules" VerticalAlignment="Center" FontWeight="Bold" FontSize="13.333"/>
                        </Expander.Header>
                        <Grid Margin ="10">
                            <StackPanel>
                                <CheckBox IsChecked="{Binding EnableHardcore}" Content="Enable Hardcore Mode" HorizontalAlignment="Left"/>
                                <CheckBox IsChecked="{Binding EnablePVP}" Content="Enable PvP" HorizontalAlignment="Left"/>
                                <CheckBox IsChecked="{Binding AllowCaveBuildingPvE}" Content="Enable PvE Cave Building" HorizontalAlignment="Left"/>

                                <local:AnnotatedSlider Label="Difficulty:" Value="{Binding DifficultyOffset, Converter={StaticResource DifficultyOffsetValueConverter}}" 
        							Suffix="%" Minimum="50" Maximum="400" SmallChange="10" LargeChange="50" TickFrequency="10" />
                                <GroupBox  HorizontalAlignment="Stretch">
                                    <GroupBox.Header>
                                        <CheckBox Name="EnableTributeDownloadsCheckbox" IsChecked="{Binding EnableTributeDownloads}" Content="Enable Tribute Downloads" Margin="0,5,5,5"/>
                                    </GroupBox.Header>
                                    <StackPanel>
                                        <CheckBox IsChecked="{Binding PreventDownloadSurvivors}" IsEnabled="{Binding ElementName=EnableTributeDownloadsCheckbox, Path=IsChecked}" Content="No Survivor Downloads" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                                        <CheckBox IsChecked="{Binding PreventDownloadItems}" IsEnabled="{Binding ElementName=EnableTributeDownloadsCheckbox, Path=IsChecked}" Content="No Item Downloads" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                                        <CheckBox IsChecked="{Binding PreventDownloadDinos}" IsEnabled="{Binding ElementName=EnableTributeDownloadsCheckbox, Path=IsChecked}" Content="No Dino Downloads" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                                    </StackPanel>
                                </GroupBox>
                                <GroupBox  HorizontalAlignment="Stretch">
                                    <GroupBox.Header>
                                        <CheckBox Name="EnableIncreasePvPRespawnInterval" IsChecked="{Binding IncreasePvPRespawnInterval}" Content="Increase PvP Respawn Interval" Margin="0,5,5,5"/>
                                    </GroupBox.Header>
                                    <StackPanel>
                                        <local:AnnotatedSlider Label="Increase Check Period:" Value="{Binding IncreasePvPRespawnIntervalCheckPeriod}" IsEnabled="{Binding ElementName=EnableIncreasePvPRespawnInterval, Path=IsChecked}" Suffix="seconds" Minimum="0" Maximum="1800" SmallChange="60" LargeChange="300" TickFrequency="60" />
                                        <local:AnnotatedSlider Label="Increase Multiplier:" Value="{Binding IncreasePvPRespawnIntervalMultiplier}" IsEnabled="{Binding ElementName=EnableIncreasePvPRespawnInterval, Path=IsChecked}" Suffix="x" Minimum="0.01" Maximum="10" SmallChange="0.5" LargeChange="1" TickFrequency="1" />
                                        <local:AnnotatedSlider Label="Increase Base Amount:" Value="{Binding IncreasePvPRespawnIntervalBaseAmount}" IsEnabled="{Binding ElementName=EnableIncreasePvPRespawnInterval, Path=IsChecked}" Suffix="seconds" Minimum="0" Maximum="1800" SmallChange="60" LargeChange="300" TickFrequency="60" />                                        
                                    </StackPanel>
                                </GroupBox>
                                <GroupBox  HorizontalAlignment="Stretch">
                                    <GroupBox.Header>
                                        <CheckBox Name="EnableAutoPvETimer" IsChecked="{Binding AutoPvETimer}" Content="PvE Schedule" Margin="0,5,5,5"/>
                                    </GroupBox.Header>
                                    <StackPanel>
                                        <CheckBox IsChecked="{Binding AutoPvEUseSystemTime}" IsEnabled="{Binding ElementName=EnableAutoPvETimer, Path=IsChecked}" Content="Use Server Time" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                                        <local:AnnotatedSlider Label="Start Time" Value="{Binding AutoPvEStartTimeSeconds}" IsEnabled="{Binding ElementName=EnableAutoPvETimer, Path=IsChecked}" Suffix="seconds" Minimum="0" Maximum="86400" SmallChange="900" LargeChange="3600" TickFrequency="3600" />
                                        <local:AnnotatedSlider Label="Stop Time" Value="{Binding AutoPvEStopTimeSeconds}" IsEnabled="{Binding ElementName=EnableAutoPvETimer, Path=IsChecked}" Suffix="seconds" Minimum="0" Maximum="86400" SmallChange="900" LargeChange="3600" TickFrequency="3600" />
                                    </StackPanel>
                                </GroupBox>
                            </StackPanel>
                        </Grid>
                    </Expander>
                    <Expander IsExpanded="True" Style="{DynamicResource ExpanderStyle1}">
                        <Expander.Header>
                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Chat and Notifications" VerticalAlignment="Center" FontWeight="Bold" FontSize="13.333"/>
                        </Expander.Header>
                        <Grid Margin ="10">
                            <StackPanel>
                                <CheckBox IsChecked="{Binding EnableGlobalVoiceChat}" Content="Enable Global Voice Chat" HorizontalAlignment="Left"/>
                                <CheckBox IsChecked="{Binding EnableProximityChat}" Content="Enable Proximity Text Chat" HorizontalAlignment="Left"/>
                                <CheckBox IsChecked="{Binding EnablePlayerLeaveNotifications}" Content="Enable 'Player Left' Notifications" HorizontalAlignment="Left"/>
                                <CheckBox IsChecked="{Binding EnablePlayerJoinedNotifications}" Content="Enable 'Player Joined' Notifications" HorizontalAlignment="Left"/>
                            </StackPanel>
                        </Grid>
                    </Expander>
                    <Expander IsExpanded="True" Style="{DynamicResource ExpanderStyle1}">
                        <Expander.Header>
                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="HUD and Visuals" VerticalAlignment="Center" FontWeight="Bold" FontSize="13.333"/>
                        </Expander.Header>
                        <Grid Margin ="10">
                            <StackPanel>
                                <CheckBox IsChecked="{Binding AllowCrosshair}" Content="Allow Crosshair" HorizontalAlignment="Left"/>
                                <CheckBox IsChecked="{Binding AllowHUD}" Content="Allow HUD" HorizontalAlignment="Left"/>
                                <CheckBox IsChecked="{Binding AllowThirdPersonView}" Content="Allow Third-Person View" HorizontalAlignment="Left"/>
                                <CheckBox IsChecked="{Binding AllowMapPlayerLocation}" Content="Allow Map Player Location" HorizontalAlignment="Left"/>
                                <CheckBox IsChecked="{Binding AllowPVPGamma}" Content="Allow Player Gamma Settings in PvP" HorizontalAlignment="Left"/>
                            </StackPanel>
                        </Grid>
                    </Expander>
                    <Expander IsExpanded="True" Style="{DynamicResource ExpanderStyle1}">
                        <Expander.Header>
                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Player Settings" VerticalAlignment="Center" FontWeight="Bold" FontSize="13.333"/>
                        </Expander.Header>
                        <Grid Margin ="10">
                            <StackPanel Grid.Column="0">
                                <CheckBox IsChecked="{Binding EnableFlyerCarry}" Content="Enable Flyer-Carry" HorizontalAlignment="Left"/>
                                <local:AnnotatedSlider Label="XP Multiplier:" Value="{Binding XPMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Max XP:" Value="{Binding OverrideMaxExperiencePointsPlayer}" Suffix="xp" Minimum="0" Maximum="1000000" SmallChange="5000" LargeChange="100000" TickFrequency="50000"/>
                                <local:AnnotatedSlider Label="Damage:" Value="{Binding PlayerDamageMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Resistance:" Value="{Binding PlayerResistanceMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Water Drain:" Value="{Binding PlayerCharacterWaterDrainMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Food Drain:" Value="{Binding PlayerCharacterFoodDrainMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Stamina Drain:" Value="{Binding PlayerCharacterStaminaDrainMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Health Recovery:" Value="{Binding PlayerCharacterHealthRecoveryMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                            </StackPanel>
                        </Grid>
                    </Expander>
                    <Expander IsExpanded="True" Style="{DynamicResource ExpanderStyle1}">
                        <Expander.Header>
                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Dino Settings" VerticalAlignment="Center" FontWeight="Bold" FontSize="13.333"/>
                        </Expander.Header>
                        <Grid Margin ="10">
                            <StackPanel Grid.Column="0">
                                <local:AnnotatedSlider Label="Max XP:" Value="{Binding OverrideMaxExperiencePointsDino}" Suffix="xp" Minimum="0" Maximum="1000000" SmallChange="5000" LargeChange="100000" TickFrequency="50000"/>
                                <local:AnnotatedSlider Label="Damage:" Value="{Binding DinoDamageMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Tamed Damage:" Value="{Binding TamedDinoDamageMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Resistance:" Value="{Binding DinoResistanceMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Tamed Resistance:" Value="{Binding TamedDinoResistanceMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Max Tamed Dinos:" Value="{Binding MaxTamedDinos}" Suffix="x" Minimum="0" Maximum="20000" SmallChange="500" LargeChange="2000" TickFrequency="500"/>
                                <local:AnnotatedSlider Label="Food Drain:" Value="{Binding DinoCharacterFoodDrainMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Stamina Drain:" Value="{Binding DinoCharacterStaminaDrainMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Health Recovery:" Value="{Binding DinoCharacterHealthRecoveryMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Dino Spawns:" Value="{Binding DinoCountMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <GroupBox  HorizontalAlignment="Stretch">
                                    <GroupBox.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="Dino Customization"/>
                                            <CheckBox Name="EditSpawnsCheckbox" Margin="5,5,5,5"  VerticalAlignment="Center" IsChecked="{Binding DinoSettings.DinoSpawnWeightMultipliers.IsEnabled, Mode=TwoWay}">Spawn Multipliers</CheckBox>
                                            <CheckBox Name="EditTamedDamageCheckbox" Margin="0,5,5,5" VerticalAlignment="Center" IsChecked="{Binding DinoSettings.TamedDinoClassDamageMultipliers.IsEnabled, Mode=TwoWay}">Tamed Damage</CheckBox>
                                            <CheckBox Name="EditTamedResistanceCheckbox" Margin="0,5,5,5" VerticalAlignment="Center" IsChecked="{Binding DinoSettings.TamedDinoClassResistanceMultipliers.IsEnabled, Mode=TwoWay}">Tamed Resistance</CheckBox>
                                            <CheckBox Name="EditWildDamageCheckbox" Margin="0,5,5,5" VerticalAlignment="Center" IsChecked="{Binding DinoSettings.DinoClassDamageMultipliers.IsEnabled, Mode=TwoWay}">Wild Damage</CheckBox>
                                            <CheckBox Name="EditWildResistanceCheckbox" Margin="0,5,5,5" VerticalAlignment="Center" IsChecked="{Binding DinoSettings.DinoClassResistanceMultipliers.IsEnabled, Mode=TwoWay}">Wild Resistance</CheckBox>
                                        </StackPanel>
                                    </GroupBox.Header>
                                    <DataGrid Name="DinoSettingsGrid" ItemsSource="{Binding DinoSettings}" AutoGenerateColumns="False" Height="400" FrozenColumnCount="1">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding FriendlyName, Mode=TwoWay}" Header="Name"/>
                                            <DataGridCheckBoxColumn Binding="{Binding CanSpawn, Mode=TwoWay}" Header="Spawnable"/>
                                            <DataGridCheckBoxColumn Binding="{Binding CanTame, Mode=TwoWay}" Header="Tameable"/>
                                            <DataGridComboBoxColumn ItemsSource="{StaticResource BaseDinoSettings}" 
                                                                    SelectedValueBinding="{Binding ReplacementClass, Mode=TwoWay}" 
                                                                    SelectedValuePath="ClassName"                                                                     
                                                                    DisplayMemberPath="FriendlyName" 
                                                                    Header="Replace With"/>
                                            <DataGridTextColumn Binding="{Binding SpawnWeightMultiplier, Mode=TwoWay}" Header="Spawn Weight" Visibility="{Binding Source={x:Reference EditSpawnsCheckbox}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            <DataGridCheckBoxColumn Binding="{Binding OverrideSpawnLimitPercentage, Mode=TwoWay}" Header="Override Limit" Visibility="{Binding Source={x:Reference EditSpawnsCheckbox}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            <DataGridTextColumn Binding="{Binding SpawnLimitPercentage, Mode=TwoWay}" Header="Spawn Limit" Visibility="{Binding Source={x:Reference EditSpawnsCheckbox}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            <DataGridTextColumn Binding="{Binding TamedDamageMultiplier, Mode=TwoWay}" Header="Tamed Damage" Visibility="{Binding Source={x:Reference EditTamedDamageCheckbox}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            <DataGridTextColumn Binding="{Binding TamedResistanceMultiplier, Mode=TwoWay}" Header="Tamed Resistance" Visibility="{Binding Source={x:Reference EditTamedResistanceCheckbox}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            <DataGridTextColumn Binding="{Binding WildDamageMultiplier, Mode=TwoWay}" Header="Wild Damage" Visibility="{Binding Source={x:Reference EditWildDamageCheckbox}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            <DataGridTextColumn Binding="{Binding WildResistanceMultiplier, Mode=TwoWay}" Header="Wild Resistance" Visibility="{Binding Source={x:Reference EditWildResistanceCheckbox}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </GroupBox>

                                <!--<GroupBox  HorizontalAlignment="Stretch">
                                    <GroupBox.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox x:Name="EnableDinoSpawnsCheckbox" Content="Custom Dino Spawns" IsChecked="{Binding DinoSpawnWeightMultipliers.IsEnabled}" Margin="0,5,5,5"/>
                                            <Button Width="22" Height="22" IsEnabled="{Binding ElementName=EnableDinoSpawnsCheckbox, Path=IsChecked}" Click="DinoSpawn_Reset" 
                                                    ToolTip="Reset spawns to game defaults">
                                                <Image Source="Art/Refresh.png" Width="16"/>
                                            </Button>
                                        </StackPanel>
                                    </GroupBox.Header>
                                    <ListBox ItemsSource="{Binding DinoSpawnWeightMultipliers}" Height="200" IsEnabled="{Binding ElementName=EnableDinoSpawnsCheckbox, Path=IsChecked}" HorizontalContentAlignment="Stretch">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Border BorderBrush="Black" BorderThickness="1" Background="Beige">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="1*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <Label Grid.Column="0" Grid.Row="0" Content="{Binding DinoNameTag}" FontSize="15" FontWeight="Bold" VerticalAlignment="Center"/>
                                                        <local:AnnotatedSlider Grid.Column="1" Grid.Row="0" Margin="5,0,0,0" Label="Spawn Weight" Value="{Binding SpawnWeightMultiplier}" Suffix="x" Minimum="0" Maximum="100" SmallChange="1" LargeChange="10" TickFrequency="10" LabelRelativeWidth="100" SuffixRelativeWidth="20" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                                        <CheckBox x:Name="OverrideSpawnLimitCheckbox" Grid.Column="0" Grid.Row="1" Margin="10,0,0,0" Content="Override Spawn Limit" IsChecked="{Binding OverrideSpawnLimitPercentage}" VerticalAlignment="Center"/>
                                                        <local:AnnotatedSlider Grid.Column="1" Grid.Row="1" Margin="5,0,0,0" IsEnabled="{Binding ElementName=OverrideSpawnLimitCheckbox, Path=IsChecked}" Label="Spawn Limit" Value="{Binding SpawnLimitPercentage}" Suffix="%" Minimum="0" Maximum="100" SmallChange="1" LargeChange="10" TickFrequency="10" LabelRelativeWidth="100" SuffixRelativeWidth="20" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </GroupBox>-->
                                <!--<GroupBox  HorizontalAlignment="Stretch">
                                    <GroupBox.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox x:Name="EnableTamedDinoClassDamageMultipliersCheckbox" Content="Custom Tamed Dino Damage Multipliers" IsChecked="{Binding TamedDinoClassDamageMultipliers.IsEnabled}" Margin="0,5,5,5"/>
                                            <Button Width="22" Height="22" IsEnabled="{Binding ElementName=EnableTamedDinoClassDamageMultipliersCheckbox, Path=IsChecked}" Click="TamedDinoClassDamageMultipliers_Reset" 
                                                    ToolTip="Reset damage to game defaults">
                                                <Image Source="Art/Refresh.png" Width="16"/>
                                            </Button>
                                        </StackPanel>
                                    </GroupBox.Header>
                                    <ListBox ItemsSource="{Binding TamedDinoClassDamageMultipliers}" Height="200" IsEnabled="{Binding ElementName=EnableTamedDinoClassDamageMultipliersCheckbox, Path=IsChecked}" HorizontalContentAlignment="Stretch">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Border BorderBrush="Black" BorderThickness="1" Background="Beige">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="150"/>
                                                            <ColumnDefinition Width="1*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <Label Grid.Column="0" Grid.Row="0" Content="{Binding ClassName, Converter={StaticResource DinoNameValueConverter}}" FontSize="15" FontWeight="Bold" VerticalAlignment="Center"/>
                                                        <local:AnnotatedSlider Grid.Column="1" Grid.Row="0" Margin="5,0,0,0" Label="Damage" Value="{Binding Multiplier}" Suffix="x" Minimum="0" Maximum="100" SmallChange="1" LargeChange="10" TickFrequency="10" LabelRelativeWidth="100" SuffixRelativeWidth="20" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </GroupBox>-->
                                <!--<GroupBox  HorizontalAlignment="Stretch">
                                    <GroupBox.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox x:Name="EnableTamedDinoClassResistanceMultipliersCheckbox" Content="Custom Tamed Dino Resistance Multipliers" IsChecked="{Binding TamedDinoClassResistanceMultipliers.IsEnabled}" Margin="0,5,5,5"/>
                                            <Button Width="22" Height="22" IsEnabled="{Binding ElementName=EnableTamedDinoClassResistanceMultipliersCheckbox, Path=IsChecked}" Click="TamedDinoClassResistanceMultipliers_Reset" 
                                                    ToolTip="Reset resistances to game defaults">
                                                <Image Source="Art/Refresh.png" Width="16"/>
                                            </Button>
                                        </StackPanel>
                                    </GroupBox.Header>
                                    <ListBox ItemsSource="{Binding TamedDinoClassResistanceMultipliers}" Height="200" IsEnabled="{Binding ElementName=EnableTamedDinoClassResistanceMultipliersCheckbox, Path=IsChecked}" HorizontalContentAlignment="Stretch">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Border BorderBrush="Black" BorderThickness="1" Background="Beige">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="150"/>
                                                            <ColumnDefinition Width="1*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <Label Grid.Column="0" Grid.Row="0" Content="{Binding ClassName, Converter={StaticResource DinoNameValueConverter}}" FontSize="15" FontWeight="Bold" VerticalAlignment="Center"/>
                                                        <local:AnnotatedSlider Grid.Column="1" Grid.Row="0" Margin="5,0,0,0" Label="Resistance" Value="{Binding Multiplier}" Suffix="x" Minimum="0" Maximum="100" SmallChange="1" LargeChange="10" TickFrequency="10" LabelRelativeWidth="100" SuffixRelativeWidth="20" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </GroupBox>-->
                                <!--<GroupBox  HorizontalAlignment="Stretch">
                                    <GroupBox.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox x:Name="EnableDinoClassDamageMultipliersCheckbox" Content="Custom Wild Dino Damage Multipliers" IsChecked="{Binding DinoClassDamageMultipliers.IsEnabled}" Margin="0,5,5,5"/>
                                            <Button Width="22" Height="22" IsEnabled="{Binding ElementName=EnableDinoClassDamageMultipliersCheckbox, Path=IsChecked}" Click="DinoClassDamageMultipliers_Reset" 
                                                    ToolTip="Reset damage to game defaults">
                                                <Image Source="Art/Refresh.png" Width="16"/>
                                            </Button>
                                        </StackPanel>
                                    </GroupBox.Header>
                                    <ListBox ItemsSource="{Binding DinoClassDamageMultipliers}" Height="200" IsEnabled="{Binding ElementName=EnableDinoClassDamageMultipliersCheckbox, Path=IsChecked}" HorizontalContentAlignment="Stretch">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Border BorderBrush="Black" BorderThickness="1" Background="Beige">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="150"/>
                                                            <ColumnDefinition Width="1*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <Label Grid.Column="0" Grid.Row="0" Content="{Binding ClassName, Converter={StaticResource DinoNameValueConverter}}" FontSize="15" FontWeight="Bold" VerticalAlignment="Center"/>
                                                        <local:AnnotatedSlider Grid.Column="1" Grid.Row="0" Margin="5,0,0,0" Label="Damage" Value="{Binding Multiplier}" Suffix="x" Minimum="0" Maximum="100" SmallChange="1" LargeChange="10" TickFrequency="10" LabelRelativeWidth="100" SuffixRelativeWidth="20" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </GroupBox>-->
                                <!--<GroupBox  HorizontalAlignment="Stretch">
                                    <GroupBox.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox x:Name="EnableDinoClassResistanceMultipliersCheckbox" Content="Custom Wild Dino Resistance Multipliers" IsChecked="{Binding DinoClassResistanceMultipliers.IsEnabled}" Margin="0,5,5,5"/>
                                            <Button Width="22" Height="22" IsEnabled="{Binding ElementName=EnableDinoClassResistanceMultipliersCheckbox, Path=IsChecked}" Click="DinoClassResistanceMultipliers_Reset" 
                                                    ToolTip="Reset resistances to game defaults">
                                                <Image Source="Art/Refresh.png" Width="16"/>
                                            </Button>
                                        </StackPanel>
                                    </GroupBox.Header>
                                    <ListBox ItemsSource="{Binding DinoClassResistanceMultipliers}" Height="200" IsEnabled="{Binding ElementName=EnableDinoClassResistanceMultipliersCheckbox, Path=IsChecked}" HorizontalContentAlignment="Stretch">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Border BorderBrush="Black" BorderThickness="1" Background="Beige">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="150"/>
                                                            <ColumnDefinition Width="1*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <Label Grid.Column="0" Grid.Row="0" Content="{Binding ClassName, Converter={StaticResource DinoNameValueConverter}}" FontSize="15" FontWeight="Bold" VerticalAlignment="Center"/>
                                                        <local:AnnotatedSlider Grid.Column="1" Grid.Row="0" Margin="5,0,0,0" Label="Resistance" Value="{Binding Multiplier}" Suffix="x" Minimum="0" Maximum="100" SmallChange="1" LargeChange="10" TickFrequency="10" LabelRelativeWidth="100" SuffixRelativeWidth="20" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </GroupBox>-->
                            </StackPanel>
                        </Grid>
                    </Expander>
                    <Expander IsExpanded="True" Style="{DynamicResource ExpanderStyle1}">
                        <Expander.Header>
                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Environment" VerticalAlignment="Center" FontWeight="Bold" FontSize="13.333"/>
                        </Expander.Header>
                        <Grid Margin ="10">
                            <StackPanel Grid.Column="0">
                                <local:AnnotatedSlider Label="Taming Speed:" Value="{Binding TamingSpeedMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Harvest Amount:" Value="{Binding HarvestAmountMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Resource Respawn:" Value="{Binding ResourcesRespawnPeriodMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Suppress Replenish Radius (Player):" Value="{Binding ResourceNoReplenishRadiusPlayers}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Suppress Replenish Radius (Structure):" Value="{Binding ResourceNoReplenishRadiusStructures}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <CheckBox Content="Clamp Resource Harvest Damage" IsChecked="{Binding ClampResourceHarvestDamage}" HorizontalAlignment="Left"/>
                                <local:AnnotatedSlider Label="Harvest Health:" Value="{Binding HarvestHealthMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <GroupBox  HorizontalAlignment="Stretch">
                                    <GroupBox.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox x:Name="EnableHarvestResourceItemAmountClassMultipliersCheckbox" Content="Custom Harvest Amount Multipliers" IsChecked="{Binding HarvestResourceItemAmountClassMultipliers.IsEnabled}" Margin="0,5,5,5"/>
                                            <Button Width="22" Height="22" IsEnabled="{Binding ElementName=EnableHarvestResourceItemAmountClassMultipliersCheckbox, Path=IsChecked}" Click="HarvestResourceItemAmountClassMultipliers_Reset" 
                                                    ToolTip="Reset harvest to game defaults">
                                                <Image Source="Art/Refresh.png" Width="16"/>
                                            </Button>
                                        </StackPanel>
                                    </GroupBox.Header>
                                    <ListBox ItemsSource="{Binding HarvestResourceItemAmountClassMultipliers}" Height="200" IsEnabled="{Binding ElementName=EnableHarvestResourceItemAmountClassMultipliersCheckbox, Path=IsChecked}" HorizontalContentAlignment="Stretch">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Border BorderBrush="Black" BorderThickness="1" Background="Beige">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="150"/>
                                                            <ColumnDefinition Width="1*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <Label Grid.Column="0" Grid.Row="0" Content="{Binding ClassName, Converter={StaticResource ResourceNameValueConverter}}" FontSize="15" FontWeight="Bold" VerticalAlignment="Center"/>
                                                        <local:AnnotatedSlider Grid.Column="1" Grid.Row="0" Margin="5,0,0,0" Label="Amount" Value="{Binding Multiplier}" Suffix="x" Minimum="0" Maximum="100" SmallChange="1" LargeChange="10" TickFrequency="10" LabelRelativeWidth="100" SuffixRelativeWidth="20" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </GroupBox>
                                <local:AnnotatedSlider Label="Day Cycle Speed:" Value="{Binding DayCycleSpeedScale}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Day Time Speed:" Value="{Binding DayTimeSpeedScale}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Night Time Speed:" Value="{Binding NightTimeSpeedScale}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Global Spoiling Time:" Value="{Binding GlobalSpoilingTimeMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Global Item Decomp Time:" Value="{Binding GlobalItemDecompositionTimeMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Global Corpse Decomp Time:" Value="{Binding GlobalCorpseDecompositionTimeMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                            </StackPanel>
                        </Grid>
                    </Expander>
                    <Expander IsExpanded="True" Style="{DynamicResource ExpanderStyle1}">
                        <Expander.Header>
                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Structures" VerticalAlignment="Center" FontWeight="Bold" FontSize="13.333"/>
                        </Expander.Header>
                        <Grid Margin ="10">
                            <StackPanel Grid.Column="0">
                                <local:AnnotatedSlider Label="Structure Resistance:" Value="{Binding StructureResistanceMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Structure Damage:" Value="{Binding StructureDamageMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="PvP Zone Structure Damage:" Value="{Binding PvPZoneStructureDamageMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1"/>
                                <local:AnnotatedSlider Label="Max Structures Visible:" Value="{Binding MaxStructuresVisible}" Minimum="50" Maximum="5000" LargeChange="50" SmallChange="10" TickFrequency="100" Suffix="items"/>
                                <GroupBox>
                                    <GroupBox.Header>
                                        <CheckBox x:Name="StructureDecayCheckbox" IsChecked="{Binding EnableStructureDecay}" Content="Enable Structure Decay" HorizontalAlignment="Left"/>
                                    </GroupBox.Header>
                                    <StackPanel Orientation="Vertical">
                                        <local:AnnotatedSlider IsEnabled="{Binding ElementName=StructureDecayCheckbox, Path=IsChecked}" Label="Structure Decay Period:" Value="{Binding PvEStructureDecayDestructionPeriod}" Suffix="?" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1" />
                                        <local:AnnotatedSlider IsEnabled="{Binding ElementName=StructureDecayCheckbox, Path=IsChecked}" Label="Structure Decay Multiplier:" Value="{Binding PvEStructureDecayPeriodMultiplier}" Suffix="x" Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1" TickFrequency="1" />
                                    </StackPanel>
                                </GroupBox>
                            </StackPanel>
                        </Grid>
                    </Expander>
                    <Expander IsExpanded="True" Style="{DynamicResource ExpanderStyle1}">
                        <Expander.Header>
                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Engrams" VerticalAlignment="Center" FontWeight="Bold" FontSize="13.333"/>
                        </Expander.Header>
                        <Grid Margin ="10">
                            <GroupBox>
                                <GroupBox.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox x:Name="EnableEngramOverridesCheckbox" IsChecked="{Binding OverrideNamedEngramEntries.IsEnabled}" Content="Enable Engram Overrides" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                        <Button Width="22" Height="22" Margin="5,0,0,0" Click="Engrams_Reset" IsEnabled="{Binding ElementName=EnableEngramOverridesCheckbox, Path=IsChecked}" ToolTip="Reset Engrams">
                                            <Image Source="Art/Refresh.png" Width="16"/>
                                        </Button>
                                    </StackPanel>
                                </GroupBox.Header>
                                <ListView x:Name="EngramsOverrideListView"  ItemsSource="{Binding OverrideNamedEngramEntries}" Height="200" IsEnabled="{Binding ElementName=EnableEngramOverridesCheckbox, Path=IsChecked}" HorizontalContentAlignment="Stretch">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Header="Name" Width="Auto" DisplayMemberBinding="{Binding EngramClassName, Converter={StaticResource EngramClassNameToDisplayNameConverter}}"/>
                                            <GridViewColumn Header="Level" Width="Auto">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox Text="{Binding EngramLevelRequirement}" VerticalContentAlignment="Center"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Cost">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox Text="{Binding EngramPointsCost}" Width="75" VerticalContentAlignment="Center"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Hidden" Width="100">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox IsChecked="{Binding EngramHidden}" HorizontalAlignment="Center"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Remove Prereqs" Width="100">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox IsChecked="{Binding RemoveEngramPreReq}" HorizontalAlignment="Center"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                            </GroupBox>
                        </Grid>
                    </Expander>
                    <Expander IsExpanded="True" Style="{DynamicResource ExpanderStyle1}">
                        <Expander.Header>
                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Custom Level Progressions" VerticalAlignment="Center" FontWeight="Bold" FontSize="13.333"/>
                        </Expander.Header>
                        <Grid Margin ="10">
                            <StackPanel Grid.Column="0">
                                <CheckBox x:Name="EnableLevelsCheckbox" Content="Enable Custom Level Progressions" IsChecked="{Binding EnableLevelProgressions}" Margin="0,5,5,5" HorizontalAlignment="Left"/>
                                <GroupBox HorizontalAlignment="Stretch">
                                    <GroupBox.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="Custom Player Levels"/>
                                            <Button Width="22" Height="22" Click="PlayerLevels_Clear" IsEnabled="{Binding ElementName=EnableLevelsCheckbox, Path=IsChecked}" ToolTip="Delete all levels">
                                                <Image Source="Art/Delete.png" Width="16"/>
                                            </Button>
                                            <Button Width="22" Height="22" Margin="5,0,0,0" Click="PlayerLevels_Reset" IsEnabled="{Binding ElementName=EnableLevelsCheckbox, Path=IsChecked}" ToolTip="Reset levels to game defaults">
                                                <Image Source="Art/Refresh.png" Width="16"/>
                                            </Button>
                                        </StackPanel>
                                    </GroupBox.Header>
                                    <ListView x:Name="CustomPlayerLevelsView"  ItemsSource="{Binding PlayerLevels}" Height="200" IsEnabled="{Binding ElementName=EnableLevelsCheckbox, Path=IsChecked}" HorizontalContentAlignment="Stretch">
                                        <ListView.View>
                                            <GridView>
                                                <GridViewColumn Header="+" Width="Auto">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Button Grid.Column="0" Grid.Row="0" Click="AddPlayerLevel_Click" Margin="2" ToolTip="Add a level after this one">
                                                                <Image Source="Art/Add.png" Width="16" Height="16" Margin="5,0,5,0" />
                                                            </Button>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                                <GridViewColumn Header="-" Width="Auto">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Button Grid.Column="0" Grid.Row="0" Click="RemovePlayerLevel_Click" Margin="2" ToolTip="Remove this level">
                                                                <Image Source="Art/Delete.png" Width="16" Height="16" Margin="5,0,5,0" />
                                                            </Button>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                                <GridViewColumn Header="Level" Width="Auto" DisplayMemberBinding="{Binding LevelIndex, Converter={StaticResource LevelIndexToDisplayLevelConverter}}"/>
                                                <GridViewColumn Header="XP Required" Width="Auto">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBox Text="{Binding XPRequired}" Width="75" VerticalContentAlignment="Center" LostFocus="PlayerLevels_Recalculate"/>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                                <GridViewColumn Header="Engram Points">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBox Text="{Binding EngramPoints}" Width="75" VerticalContentAlignment="Center" LostFocus="PlayerLevels_Recalculate"/>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                                <GridViewColumn Header="Engram Total" Width="75" DisplayMemberBinding="{Binding EngramTotal}"/>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                </GroupBox>
                                <GroupBox HorizontalAlignment="Stretch">
                                    <GroupBox.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="Custom Dino Levels"/>
                                            <Button Width="22" Height="22" Click="DinoLevels_Clear" IsEnabled="{Binding ElementName=EnableLevelsCheckbox, Path=IsChecked}" 
                                                    ToolTip="Delete all levels">
                                                <Image Source="Art/Delete.png" Width="16"/>
                                            </Button>
                                            <Button Width="22" Height="22" Margin="5,0,0,0" Click="DinoLevels_Reset"  IsEnabled="{Binding ElementName=EnableLevelsCheckbox, Path=IsChecked}"
                                                    ToolTip="Reset levels to game defaults">
                                                <Image Source="Art/Refresh.png" Width="16"/>
                                            </Button>
                                        </StackPanel>
                                    </GroupBox.Header>

                                    <ListView x:Name="CustomDinoLevelsView" ItemsSource="{Binding DinoLevels}" Height="200" IsEnabled="{Binding ElementName=EnableLevelsCheckbox, Path=IsChecked}" HorizontalContentAlignment="Stretch">
                                        <ListView.View>
                                            <GridView>
                                                <GridViewColumn Header="+" Width="Auto">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Button Grid.Column="0" Grid.Row="0" Click="AddDinoLevel_Click" Margin="2" ToolTip="Add a level after this one" >
                                                                <Image Source="Art/Add.png" Width="16" Height="16" Margin="5,0,5,0" />
                                                            </Button>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                                <GridViewColumn Header="-" Width="Auto">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Button Grid.Column="0" Grid.Row="0" Click="RemoveDinoLevel_Click" Margin="2" ToolTip="Remove this level" >
                                                                <Image Source="Art/Delete.png" Width="16" Height="16" Margin="5,0,5,0" />
                                                            </Button>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                                <GridViewColumn Header="Level" Width="Auto" DisplayMemberBinding="{Binding LevelIndex, Converter={StaticResource LevelIndexToDisplayLevelConverter}}"/>
                                                <GridViewColumn Header="XP Required" Width="Auto">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBox Text="{Binding XPRequired}" Width="75" VerticalContentAlignment="Center" LostFocus="DinoLevels_Recalculate"/>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                </GroupBox>
                            </StackPanel>
                        </Grid>
                    </Expander>
                </StackPanel>
            </ScrollViewer>
        </Border>
    </Grid>
</UserControl>
